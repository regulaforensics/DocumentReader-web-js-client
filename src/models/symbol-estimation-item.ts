/* tslint:disable */
/* eslint-disable */
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.   # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 7.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { RectangleCoordinates } from './rectangle-coordinates';

/**
 * 
 * @export
 * @interface SymbolEstimationItem
 */
export interface SymbolEstimationItem {
    /**
     * 
     * @type {number}
     * @memberof SymbolEstimationItem
     */
    'ALIGNMENT_NEAREST_SYMBOLS': number;
    /**
     * 
     * @type {number}
     * @memberof SymbolEstimationItem
     */
    'CONTRAST_PRINT': number;
    /**
     * 
     * @type {number}
     * @memberof SymbolEstimationItem
     */
    'CONTRAST_SYMBOL': number;
    /**
     * 
     * @type {number}
     * @memberof SymbolEstimationItem
     */
    'CharSymbol': number;
    /**
     * 
     * @type {number}
     * @memberof SymbolEstimationItem
     */
    'EDGE': number;
    /**
     * 
     * @type {number}
     * @memberof SymbolEstimationItem
     */
    'EMPTINESS': number;
    /**
     * 
     * @type {number}
     * @memberof SymbolEstimationItem
     */
    'STAIN': number;
    /**
     * 
     * @type {number}
     * @memberof SymbolEstimationItem
     */
    'SYMBOLS_INTERVAL': number;
    /**
     * 
     * @type {number}
     * @memberof SymbolEstimationItem
     */
    'SYMBOL_PARAM': number;
    /**
     * 
     * @type {number}
     * @memberof SymbolEstimationItem
     */
    'SYMBOL_SIZE': number;
    /**
     * 
     * @type {number}
     * @memberof SymbolEstimationItem
     */
    'SizeErrorAlignWithNext': number;
    /**
     * 
     * @type {number}
     * @memberof SymbolEstimationItem
     */
    'SizeErrorAlignWithPrev': number;
    /**
     * 
     * @type {number}
     * @memberof SymbolEstimationItem
     */
    'SizeErrorIntervWithNext': number;
    /**
     * 
     * @type {number}
     * @memberof SymbolEstimationItem
     */
    'SizeErrorIntervWithPrev': number;
    /**
     * 
     * @type {number}
     * @memberof SymbolEstimationItem
     */
    'SizeErrorSymbolHeight': number;
    /**
     * 
     * @type {number}
     * @memberof SymbolEstimationItem
     */
    'SizeErrorSymbolWidth': number;
    /**
     * 
     * @type {RectangleCoordinates}
     * @memberof SymbolEstimationItem
     */
    'SymbolBounds': RectangleCoordinates;
}

