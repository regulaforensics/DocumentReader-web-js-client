/* tslint:disable */
/* eslint-disable */
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.   # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 7.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { ListVerifiedFields } from './list-verified-fields';

/**
 * Lexical data analysis allows you to compare the results of reading the text data of the MRZ, the document filling area, barcodes and data from the memory of the RFID chip for an additional assessment of the authenticity of the document. Single result for all pages. Consider using Result.TEXT type for more simplicity. 
 * @export
 * @interface LexicalAnalysisResult
 */
export interface LexicalAnalysisResult {
    /**
     * 
     * @type {ListVerifiedFields}
     * @memberof LexicalAnalysisResult
     */
    'ListVerifiedFields': ListVerifiedFields;
    /**
     * 
     * @type {number}
     * @memberof LexicalAnalysisResult
     */
    'buf_length'?: number;
    /**
     * 
     * @type {number}
     * @memberof LexicalAnalysisResult
     */
    'light'?: number;
    /**
     * 
     * @type {number}
     * @memberof LexicalAnalysisResult
     */
    'list_idx'?: number;
    /**
     * 
     * @type {number}
     * @memberof LexicalAnalysisResult
     */
    'page_idx'?: number;
    /**
     * Same as Result type, but used for safe parsing of not-described values. See Result type.
     * @type {number}
     * @memberof LexicalAnalysisResult
     */
    'result_type': number;
}

